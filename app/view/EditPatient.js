/*
 * File: app/view/EditPatient.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('hurricane.view.EditPatient', {
    extend: 'Ext.window.Window',
    alias: 'widget.editpatient',

    requires: [
        'hurricane.view.EditPatientViewModel',
        'hurricane.view.EditPatientViewController',
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.form.Panel',
        'Ext.form.field.Display',
        'Ext.form.field.Date',
        'Ext.form.field.ComboBox'
    ],

    controller: 'editpatient',
    viewModel: {
        type: 'editpatient'
    },
    modal: true,
    id: 'editPanel',
    width: 400,
    title: 'Patienten Anzeigen',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'tabpanel',
            id: 'patientenPanel',
            activeTab: 0,
            items: [
                {
                    xtype: 'panel',
                    title: 'Patient',
                    items: [
                        {
                            xtype: 'form',
                            reference: 'form',
                            id: 'frmEditPatient',
                            itemId: 'myform',
                            bodyPadding: '20 20 20 30',
                            frameHeader: false,
                            header: false,
                            title: 'Patienten Anzeigen',
                            items: [
                                {
                                    xtype: 'displayfield',
                                    hidden: true,
                                    fieldLabel: 'Patient Id',
                                    name: 'patientID',
                                    submitValue: true
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Name',
                                    name: 'Name',
                                    readOnly: false
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Vorname',
                                    name: 'Vorname',
                                    readOnly: false
                                },
                                {
                                    xtype: 'datefield',
                                    fieldLabel: 'Geburtsdatum',
                                    name: 'Geburtsdatum',
                                    readOnly: false,
                                    format: 'd.m.Y',
                                    submitFormat: 'Y-m-d'
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Strasse',
                                    name: 'Strasse',
                                    readOnly: false
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Plz',
                                    name: 'PLZ',
                                    readOnly: false
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Ort',
                                    name: 'Ort',
                                    readOnly: false
                                },
                                {
                                    xtype: 'combobox',
                                    id: 'frmEditFldGeschlecht',
                                    fieldLabel: 'Geschlecht',
                                    name: 'GeschlechtID',
                                    readOnly: false,
                                    displayField: 'Beschreibung',
                                    queryMode: 'local',
                                    store: 'Geschlecht',
                                    valueField: 'GeschlechtID'
                                },
                                {
                                    xtype: 'container',
                                    padding: 10,
                                    layout: {
                                        type: 'hbox',
                                        align: 'middle',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            flex: 1,
                                            formBind: true,
                                            itemId: 'saveButton',
                                            margin: 5,
                                            text: 'Speichern',
                                            listeners: {
                                                click: {
                                                    fn: 'onSave',
                                                    scope: 'controller'
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            flex: 1,
                                            itemId: 'cancelButton',
                                            margin: 5,
                                            text: 'Abbrechen',
                                            listeners: {
                                                click: {
                                                    fn: 'onCancel',
                                                    scope: 'controller'
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        afterrender: 'onWindowAfterRender'
    },

    onWindowAfterRender: function (component, eOpts) {
        Ext.getCmp('frmEditPatient').loadRecord(component.record);
        var combo = Ext.getCmp('frmEditFldGeschlecht');
        var arr = [];
        var store = Ext.getStore('Patient').load({
            callback: function (records, options, success) {
                if (success) {
                    store.each(function (record) {
                        debugger;
                        if (record.data.patientID === component.record.data.patientID) {
                            Ext.getCmp('patientenPanel').add(Ext.create('hurricane.view.showProtokoll', {
                                record: record,
                                title: record.data.PatientenNummer
                            }));
                        }
                    });
                }
            }
        });
        combo.setValue(component.record.data.GeschlechtID);

    }

});