/*
 * File: app/view/EditPatient.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('hurricane.view.EditPatient', {
    extend: 'Ext.window.Window',
    alias: 'widget.editpatient',

    requires: [
        'hurricane.view.EditPatientViewModel',
        'hurricane.view.EditPatientViewController',
        'Ext.form.Panel',
        'Ext.form.field.Display',
        'Ext.form.field.Date',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    controller: 'editpatient',
    viewModel: {
        type: 'editpatient'
    },
    modal: true,
    id: 'editPanel',
    width: 400,
    frameHeader: false,
    header: false,
    title: 'Patienten Anzeigen',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            reference: 'form',
            id: 'frmEditPatient',
            itemId: 'myform',
            bodyPadding: 10,
            title: 'Patienten Anzeigen',
            items: [
                {
                    xtype: 'displayfield',
                    hidden: true,
                    fieldLabel: 'Patient Id',
                    name: 'patientID',
                    submitValue: true
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Name',
                    name: 'Name',
                    readOnly: false
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Vorname',
                    name: 'Vorname',
                    readOnly: false
                },
                {
                    xtype: 'datefield',
                    fieldLabel: 'Geburtsdatum',
                    name: 'Geburtsdatum',
                    readOnly: false,
                    format: 'd.m.Y',
                    submitFormat: 'Y-m-d'
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Strasse',
                    name: 'Strasse',
                    readOnly: false
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Plz',
                    name: 'PLZ',
                    readOnly: false
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Ort',
                    name: 'Ort',
                    readOnly: false
                },
                {
                    xtype: 'combobox',
                    id: 'frmFldGeschlecht',
                    fieldLabel: 'Geschlecht',
                    name: 'GeschlechtID',
                    readOnly: false,
                    displayField: 'Beschreibung',
                    queryMode: 'local',
                    store: 'Geschlecht',
                    valueField: 'GeschlechtID'
                },
                {
                    xtype: 'container',
                    padding: 10,
                    layout: {
                        type: 'hbox',
                        align: 'middle',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            flex: 1,
                            formBind: true,
                            itemId: 'saveButton',
                            margin: 5,
                            text: 'Speichern',
                            listeners: {
                                click: {
                                    fn: 'onSave',
                                    scope: 'controller'
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            itemId: 'cancelButton',
                            margin: 5,
                            text: 'Abbrechen',
                            listeners: {
                                click: {
                                    fn: 'onCancel',
                                    scope: 'controller'
                                }
                            }
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        afterrender: 'onWindowAfterRender'
    },

    onWindowAfterRender: function(component, eOpts) {
        Ext.getCmp('frmEditPatient').loadRecord(component.record);
        var combo = Ext.getCmp('frmFldGeschlecht');
        combo.setValue(component.record.data.GeschlechtID);
    }

});